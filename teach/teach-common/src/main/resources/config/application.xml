<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
			http://www.springframework.org/schema/tx
			http://www.springframework.org/schema/tx/spring-tx.xsd
			http://www.springframework.org/schema/aop
			http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-4.1.xsd
			http://www.springframework.org/schema/mvc
			http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
			http://www.springframework.org/schema/task
			http://www.springframework.org/schema/task/spring-task-3.0.xsd">


    <!-- 读取db.properties配置文件 -->
    <context:property-placeholder location="classpath:config/*.properties,classpath:quartz.properties"/>

    <bean id="springContextHolder" class="cn.logicalthinking.common.util.SpringContextHolder" lazy-init="false" />

    <!--spring容器-->
    <context:component-scan base-package="cn.logicalthinking"/>

    <import resource="classpath*:config/spring-redis.xml"/>

    <!-- 配置数据源 -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${SQL_DRIVER}"/>
        <property name="url" value="${SQL_URL}"/>
        <property name="username" value="${SQL_USERNAME}"/>
        <property name="password" value="${SQL_PASSWORD}"/>
    </bean>

    <!-- spring与mybatis的整合，配置sqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!--<property name="typeAliasesPackage" value="cn.logicalthinking.common.entity"/>-->
        <property name="configLocation" value="classpath:config/mybatis.xml"/>

        <property name="mapperLocations" value="classpath:mapper/*Mapper.xml"/>
    </bean>

    <!-- 启动对@AspectJ7注解的支持 -->
    <aop:aspectj-autoproxy/>

    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
        <constructor-arg ref="sqlSessionFactory"></constructor-arg>
    </bean>

    <!-- 接口扫描配置
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="mapper"/>
    </bean>-->

    <!-- 定义事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
        <property name="globalRollbackOnParticipationFailure" value="true"/>
    </bean>

    <!-- 配置 Annotation 驱动，扫描@Transactional注解的类定义事务  -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
    <!-- 事务管理 属性 -->
    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="select*" propagation="REQUIRED" read-only="false"/>
            <tx:method name="get*" propagation="REQUIRED" read-only="false"/>
            <tx:method name="delete*" propagation="REQUIRED" rollback-for="RuntimeException"/>
            <tx:method name="remove*" propagation="REQUIRED" rollback-for="RuntimeException"/>
            <tx:method name="update*" propagation="REQUIRED" rollback-for="RuntimeException"/>
            <tx:method name="add*" propagation="REQUIRED" rollback-for="RuntimeException"/>
            <tx:method name="insert*" propagation="REQUIRED" rollback-for="RuntimeException"/>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <!-- 配置切面 -->
    <aop:config expose-proxy="true" proxy-target-class="true">
        <aop:advisor advice-ref="transactionAdvice"
                     pointcut="execution(* cn.logicalthinking.models.*.controller.*.*(..))"/>
    </aop:config>
</beans>
