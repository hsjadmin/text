<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
			http://www.springframework.org/schema/tx
			http://www.springframework.org/schema/tx/spring-tx.xsd
			http://www.springframework.org/schema/aop
			http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-4.1.xsd">

    <description>redis配置</description>

    <!-- redis.properties配置文件 -->

    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
    	<!-- 最大空闲连接数 -->
        <property name="maxIdle" value="${redis.maxIdle}"/>
        <!-- 可用连接实例的最大数目，默认值为8 -->
        <property name="maxTotal" value="${redis.maxTotal}"/>
        <!-- 获取连接时的最大等待毫秒数,小于零:阻塞不确定的时间,默认-1 -->
        <property name="maxWaitMillis" value="${redis.maxWait}"/>
        <!-- 当调用borrow Object方法时，是否进行有效性检查, 默认false -->
        <property name="testOnBorrow" value="${redis.testOnBorrow}"/>
        <!-- 当调用return Object方法时，是否进行有效性检查 -->
        <property name="testOnReturn" value="${redis.testOnReturn}"/>
        <!-- Idle时进行连接扫描 -->
        <property name="testWhileIdle" value="${redis.testWhileIdle}"/>
    </bean>
    
   <bean name="jedisPool" class="redis.clients.jedis.JedisPool">
        <constructor-arg index="0" ref="jedisPoolConfig" />
        <constructor-arg index="1" value="${redis.host}" type="java.lang.String"/>
        <constructor-arg index="2" value="${redis.port}" type="int"/>
        <constructor-arg index="3" value="${redis.timeout}" type="int"/>

	</bean>
    <bean id="redisManager" class="cn.logicalthinking.common.cache.RedisManager">
    	<property name="jedisPoolConfig" ref="jedisPoolConfig"></property>
	</bean>
	
     <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.host}" />
        <property name="port" value="${redis.port}" />
        <!-- <property name="password" value="${redis.password}" />   -->
        <property name="poolConfig" ref="jedisPoolConfig" />
    </bean>
   	<bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate" p:connection-factory-ref="jedisConnectionFactory" />

</beans>